; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = release

; Custom data group
; can be use in [env:***] via ${common.***}
[common]

[env]
board = esp32dev
platform = espressif32
; choosing an older platform version
; platform = espressif32@~3.5.0
; platform = https://github.com/platformio/platform-espressif32.git#v5.1.0   ; Arduino V2.0.4
; platform = https://github.com/platformio/platform-espressif32.git#v5.2.0   ; Arduino V2.0.5
; platform = https://github.com/platformio/platform-espressif32.git#v6.1.0   ; Arduino V2.0.6
;
framework = arduino
; choosing an older framework version
; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.4
; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.6
;
monitor_speed = 115200
monitor_port = COM[345678]
monitor_filters = time, colorize, esp32_exception_decoder
upload_port = COM[345678]
upload_speed = 921600
lib_deps = 
  SoapESP32
; only for examples that need SD attached
;  SD
; as of espressif 32 4.x not valid anymore
;  SD(esp32)
build_flags =
  -D__GNU_VISIBLE
;  -DPARENT_ID_MUST_MATCH
;  -DSHOW_EMPTY_FILES
; when using Ethernet shield/board instead of builtin WiFi	
;  -DUSE_ETHERNET
;
; try different partition setting:
;board_build.partitions = min_spiffs.csv
;board_build.partitions = no_ota.csv

[env:release]
lib_deps = 
  ${env.lib_deps}
build_flags = 
  ${env.build_flags}
  -Werror=unused-variable
  -Werror=unused-but-set-variable
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose,   
  -DCORE_DEBUG_LEVEL=2
;  -DSHOW_ESP32_MEMORY_STATISTICS
; picking only a single server for testing
;  -DTHIS_IP_ONLY=192,168,1,42
;

[env:debug]
lib_deps = 
  ${env.lib_deps}
build_type = debug
debug_tool = esp-prog
debug_init_break = tbreak setup
build_flags = 
  ${env.build_flags}
  -Werror=unused-variable
  -Werror=unused-but-set-variable
; 0 no debug output, 1 errors, 2 warnings, 3 infos, 4 debug info, 5 verbose,   
  -DCORE_DEBUG_LEVEL=4
  -DSHOW_ESP32_MEMORY_STATISTICS
; picking only a single server for testing
;  -DTHIS_IP_ONLY=192,168,1,42
;